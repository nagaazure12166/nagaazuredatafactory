{
	"name": "DF_Incremental",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_ALL",
						"type": "DatasetReference"
					},
					"name": "ADLSSOURCE"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlServer_Final_Emp",
						"type": "DatasetReference"
					},
					"name": "DesRef"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSqlServer_Final_Emp",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSqlServer_Final_Emp",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "RefSelect"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "source(output(\n\t\tEID as string,\n\t\tEName as string,\n\t\tESalary as short,\n\t\tEAddress as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ADLSSOURCE\nsource(output(\n\t\tID as string,\n\t\tEName as string,\n\t\tSalary as string,\n\t\tAddress as string,\n\t\tInsert_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DesRef\nDesRef select(mapColumn(\n\t\tID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RefSelect\nADLSSOURCE, RefSelect lookup(EID == ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isMatch(),\n\tdisjoint: false) ~> ConditionalSplit1@(Match, UnMatch)\nConditionalSplit1@Match derive(Updatedate = currentTimestamp()) ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(true())) ~> AlterRow1\nConditionalSplit1@UnMatch derive(Insertdate = currentTimestamp()) ~> DerivedColumn2\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID as string,\n\t\tEName as string,\n\t\tSalary as string,\n\t\tAddress as string,\n\t\tInsert_date as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tID as string,\n\t\tEName as string,\n\t\tSalary as string,\n\t\tAddress as string,\n\t\tInsert_date as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tID,\n\t\tEName,\n\t\tSalary = ESalary,\n\t\tAddress = EAddress,\n\t\tInsert_date = Insertdate\n\t)) ~> sink2"
		}
	}
}