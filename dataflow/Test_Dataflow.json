{
	"name": "Test_Dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ADLS_ALL",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQLSERVER_Cloud_Test_DestEMP",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "insertdate"
				},
				{
					"name": "Amount"
				},
				{
					"name": "uppername"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tEID as short,\n\t\tEName as string,\n\t\tESalary as short,\n\t\tEAddress as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source1\nsource1 derive(Insert_date = currentTimestamp(),\n\tpartitionBy('hash', 1)) ~> insertdate\ninsertdate derive(Amount = ESalary/100) ~> Amount\nAmount derive(Upper_Name = upper(EName)) ~> uppername\nuppername alterRow(deleteIf(EID == 4),\n\tpartitionBy('hash', 1)) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEID as string,\n\t\tEName as string,\n\t\tESalary as string,\n\t\tEAddress as string,\n\t\tUpper_Name as string,\n\t\tSalary_1 as integer,\n\t\tInsert_date as timestamp\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['EID'],\n\tformat: 'table',\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tEID,\n\t\tEName,\n\t\tESalary,\n\t\tEAddress,\n\t\tUpper_Name,\n\t\tSalary_1 = Insert_date,\n\t\tInsert_date\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}