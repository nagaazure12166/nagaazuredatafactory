{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nagaadf2021"
		},
		"LS_ADLS_nagaadlsgen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_ADLS_nagaadlsgen2'"
		},
		"LS_nagadwhserver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_nagadwhserver'"
		},
		"LS_ADLS_nagaadlsgen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://nagaadlsgen2.dfs.core.windows.net"
		},
		"Even based trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/8240e0bb-94c8-4b1c-934d-2e3da145740d/resourceGroups/nagarg2021/providers/Microsoft.Storage/storageAccounts/nagaadlsgen2"
		},
		"TumblingTrigger_properties_pipeline_parameters_StartTime": {
			"type": "string",
			"defaultValue": "@trigger.outputs.windowStartTime"
		},
		"TumblingTrigger_properties_pipeline_parameters_EndTime": {
			"type": "string",
			"defaultValue": "@trigger.outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Polybase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table dbo.EMP1PF",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "LS_ADLS_nagaadlsgen2",
									"type": "LinkedServiceReference"
								},
								"path": "adls2021gen2"
							},
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_ADLS_nagaadlsgen2",
										"type": "LinkedServiceReference"
									},
									"path": "logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EID",
											"type": "String"
										},
										"sink": {
											"name": "EMPID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EName",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ESalary",
											"type": "String"
										},
										"sink": {
											"name": "Salary",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EAddress",
											"type": "String"
										},
										"sink": {
											"name": "Addess",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ADLS_Emp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Synapse_nagadwhserver",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Emp')]",
				"[concat(variables('factoryId'), '/datasets/DS_Synapse_nagadwhserver')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_nagaadlsgen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Wait_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Emp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ADLS_nagaadlsgen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Emp.txt",
						"fileSystem": "raw"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ADLS_nagaadlsgen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Synapse_nagadwhserver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_nagadwhserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "varchar"
					},
					{
						"name": "Addess",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP1PF"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_nagadwhserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADLS_nagaadlsgen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_ADLS_nagaadlsgen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_ADLS_nagaadlsgen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_nagadwhserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_nagadwhserver_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Even based trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Wait",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/destination/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Even based trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Thumblingtest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "Select * from Source_EMP where Insert_date >= \n‘@{formatDateTime(pipeline().parameters.StartTime,’yyyy-MM-dd HH-mm-ss’)}’ \nand Insert_date < ‘@{formatDateTime(pipeline().parameters.StartTime,’yyyy-MM-dd HH-mm-ss’)}’ \n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Salary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Insert_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Insert_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Synapse_SourceEMP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Synapse_DestEMP",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"StartTime": {
						"type": "string"
					},
					"EndTime": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Synapse_SourceEMP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Synapse_DestEMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Synapse_SourceEMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_nagadwhserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EName",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "varchar"
					},
					{
						"name": "Insert_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Source_EMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_nagadwhserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Synapse_DestEMP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_nagadwhserver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EName",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "varchar"
					},
					{
						"name": "Insert_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dest_EMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_nagadwhserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TumblingTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_Thumblingtest",
						"type": "PipelineReference"
					},
					"parameters": {
						"StartTime": "[parameters('TumblingTrigger_properties_pipeline_parameters_StartTime')]",
						"EndTime": "[parameters('TumblingTrigger_properties_pipeline_parameters_EndTime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2021-02-25T11:40:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Thumblingtest')]"
			]
		}
	]
}