{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nagaadf2021"
		},
		"Tumbling Trigger_1_properties_pipeline_parameters_StartTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Tumbling Trigger_1_properties_pipeline_parameters_EndTime": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Deltaload')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select max(Modifieddate) as maxdate from Source_EMPPF",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQLServer_Onpremise",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup_Trackdate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select TabName,  Latestdate from Trackdate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQLServer_Onpremise",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookup_Trackdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from Source_EMPPF where Modifieddate > \r\n'@{activity('Lookup_Trackdate').output.firstrow.Latestdate}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ESalary",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ESalary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Modifieddate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Modifieddate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPremise_Source_EMPPF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OnPremise_Dest_EMPPF",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_updatetrackdate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateTrackdate]",
							"storedProcedureParameters": {
								"tabname": {
									"value": {
										"value": "@activity('Lookup_Trackdate').output.firstrow.TabName",
										"type": "Expression"
									},
									"type": "String"
								},
								"latestdate": {
									"value": {
										"value": "@activity('Lookup1').output.firstrow.maxdate",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQLServer_OnPremise",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Self-Hosted Ex')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Salary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Insert_date",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Insert_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQLServer_Onpremise",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQLSERVER_Cloud",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumbling Trigger_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "PL_Thumblingtest",
						"type": "PipelineReference"
					},
					"parameters": {
						"StartTime": "[parameters('Tumbling Trigger_1_properties_pipeline_parameters_StartTime')]",
						"EndTime": "[parameters('Tumbling Trigger_1_properties_pipeline_parameters_EndTime')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2021-02-24T22:36:00Z",
					"endTime": "2021-02-25T13:36:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ESalary",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ESalary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Modifieddate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Modifieddate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPremise_Source_EMPPF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OnPremise_Dest_EMPPF",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}